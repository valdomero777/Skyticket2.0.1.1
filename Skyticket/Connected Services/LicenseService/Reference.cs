//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Skyticket.LicenseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://servicios.tickets.com/", ConfigurationName="LicenseService.ws_Licencias")]
    public interface ws_Licencias {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://servicios.tickets.com/ws_Licencias/licenciaRequest", ReplyAction="http://servicios.tickets.com/ws_Licencias/licenciaResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Skyticket.LicenseService.licenciaResponse licencia(Skyticket.LicenseService.licenciaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://servicios.tickets.com/ws_Licencias/licenciaRequest", ReplyAction="http://servicios.tickets.com/ws_Licencias/licenciaResponse")]
        System.Threading.Tasks.Task<Skyticket.LicenseService.licenciaResponse> licenciaAsync(Skyticket.LicenseService.licenciaRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://servicios.tickets.com/")]
    public partial class ctLicenciaBeans : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int id_cienteField;
        
        private bool id_cienteFieldSpecified;
        
        private string keylicenciaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id_ciente {
            get {
                return this.id_cienteField;
            }
            set {
                this.id_cienteField = value;
                this.RaisePropertyChanged("id_ciente");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool id_cienteSpecified {
            get {
                return this.id_cienteFieldSpecified;
            }
            set {
                this.id_cienteFieldSpecified = value;
                this.RaisePropertyChanged("id_cienteSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string keylicencia {
            get {
                return this.keylicenciaField;
            }
            set {
                this.keylicenciaField = value;
                this.RaisePropertyChanged("keylicencia");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="licencia", WrapperNamespace="http://servicios.tickets.com/", IsWrapped=true)]
    public partial class licenciaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://servicios.tickets.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Skyticket.LicenseService.ctLicenciaBeans consulta;
        
        public licenciaRequest() {
        }
        
        public licenciaRequest(Skyticket.LicenseService.ctLicenciaBeans consulta) {
            this.consulta = consulta;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="licenciaResponse", WrapperNamespace="http://servicios.tickets.com/", IsWrapped=true)]
    public partial class licenciaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://servicios.tickets.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
        
        public licenciaResponse() {
        }
        
        public licenciaResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ws_LicenciasChannel : Skyticket.LicenseService.ws_Licencias, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ws_LicenciasClient : System.ServiceModel.ClientBase<Skyticket.LicenseService.ws_Licencias>, Skyticket.LicenseService.ws_Licencias {
        
        public ws_LicenciasClient() {
        }
        
        public ws_LicenciasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ws_LicenciasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ws_LicenciasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ws_LicenciasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Skyticket.LicenseService.licenciaResponse Skyticket.LicenseService.ws_Licencias.licencia(Skyticket.LicenseService.licenciaRequest request) {
            return base.Channel.licencia(request);
        }
        
        public string licencia(Skyticket.LicenseService.ctLicenciaBeans consulta) {
            Skyticket.LicenseService.licenciaRequest inValue = new Skyticket.LicenseService.licenciaRequest();
            inValue.consulta = consulta;
            Skyticket.LicenseService.licenciaResponse retVal = ((Skyticket.LicenseService.ws_Licencias)(this)).licencia(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Skyticket.LicenseService.licenciaResponse> Skyticket.LicenseService.ws_Licencias.licenciaAsync(Skyticket.LicenseService.licenciaRequest request) {
            return base.Channel.licenciaAsync(request);
        }
        
        public System.Threading.Tasks.Task<Skyticket.LicenseService.licenciaResponse> licenciaAsync(Skyticket.LicenseService.ctLicenciaBeans consulta) {
            Skyticket.LicenseService.licenciaRequest inValue = new Skyticket.LicenseService.licenciaRequest();
            inValue.consulta = consulta;
            return ((Skyticket.LicenseService.ws_Licencias)(this)).licenciaAsync(inValue);
        }
    }
}
